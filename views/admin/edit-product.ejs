<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin/assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin/assets/css/main.css" rel="stylesheet" type="text/css" />
     <!-- SweetAlert2 CSS -->
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

     <link href="https://unpkg.com/cropperjs/dist/cropper.min.css" rel="stylesheet">
    <!-- <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet"> -->
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/admin/assets/imgs/theme/logo.svg" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/user-management"> <i class="icon material-icons md-public"></i>
                        <span class="text">Users</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/categories"> <i class="icon material-icons md-store"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                </li>
                <!-- <li class="menu-item">
                    <a class="menu-link" href="/admin/add-product"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                </li> -->
                <li class="menu-item">
                    <a class="menu-link" href="page-transactions-1.html"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Transactions</span>
                    </a>
                </li>
            </ul>
            <hr>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-settings"></i>
                        <span class="text">Settings</span>
                    </a>
                </li>
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">3</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage" aria-expanded="false"><i class="material-icons md-public"></i></a>
                        <!-- <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                            <a class="dropdown-item text-brand" href="#"><img src="/admin/assets/imgs/theme/flag-us.png" alt="English">English</a>
                            <a class="dropdown-item" href="#"><img src="/admin/assets/imgs/theme/flag-fr.png" alt="Français">Français</a>
                            <a class="dropdown-item" href="#"><img src="/admin/assets/imgs/theme/flag-jp.png" alt="Français">日本語</a>
                            <a class="dropdown-item" href="#"><img src="/admin/assets/imgs/theme/flag-cn.png" alt="Français">中国人</a>
                        </div> -->
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/admin/assets/imgs/people/avatar2.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="/admin/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                        
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form action="/admin/products/edit/<%= productData._id %>" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" value="<%= productData.productName %>" class="form-control" id="product_name" name="product_name" onblur="validateProductName()">
                                    <p id="name-error" class="text-danger"></p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea class="form-control" id="product_description" name="product_description" rows="4" onblur="validateDescription()"></textarea>
                                    <p id="description-error" class="text-danger"></p>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <div class="row gx-2">
                                                <input placeholder="₹" type="text" id="product_price" name="product_price" class="form-control" value="<%= productData.price %>" onblur="validatePrice()">
                                                <p id="price-error" class="text-danger"></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Promotional price</label>
                                            <input placeholder="₹" type="text" id="productPromo_price" name="productPromo_price" class="form-control" value="<%= productData.promo_price %>" onblur="validatePromoPrice()">
                                            <p id="promoprice-error" class="text-danger"></p>
                                        </div>
                                    </div>
                                </div>
                                <h4 class="mb-4">Category</h4>
                                <div class="col-sm-12 mb-3">
                                    <!-- <label class="form-label">Category</label> -->
                                    <select class="form-select" id="product_category" name="product_category">
                                      <% categoryData.forEach((cat) => { %>
                                      <option value="<%=cat._id%>"><%= cat.categoryName %></option>
                                      <% }) %>
                                  </select>
                                    <!--  -->
                                </div>
                                <h4 class="mb-4">Stocks</h4>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK6</label>
                                    <input type="number" class="form-control" id="productSizeUK6" name="productSizeUK6" value="<%= productData.stock["UK6"].quantity %>">
                                </div>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK7</label>
                                    <input type="number" class="form-control" id="productSizeUK7" name="productSizeUK7" value="<%= productData.stock["UK7"].quantity %>">
                                </div>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK8</label>
                                    <input type="number"  class="form-control" id="productSizeUK8" name="productSizeUK8" value="<%= productData.stock["UK8"].quantity %>">
                                </div>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK9</label>
                                    <input type="number" class="form-control" id="productSizeUK9" name="productSizeUK9" value="<%= productData.stock["UK9"].quantity %>">
                                </div>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK10</label>
                                    <input type="number"  class="form-control" id="productSizeUK10" name="productSizeUK10" value="<%= productData.stock["UK10"].quantity %>">
                                </div>
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">UK11</label>
                                    <input type="number" class="form-control" id="productSizeUK11" name="productSizeUK11" value="<%= productData.stock["UK11"].quantity %>">
                                </div>
                                <h4>Product Images</h4>
                                <div class="input-upload" id="input-upload">
                                    <% for(let i = 0; i < 4; i++) { %>
                                        <div class="container mt-3" id="image-container-<%= i + 1 %>">
                                            <% if( i < productData.productImage.length) { %>
                                                <div class="row align-items-center">
                                                    <div class="col-auto">
                                                        <img src="/uploads/<%= productData.productImage[i] %>" alt="" class="img-fluid">
                                                    </div>
                                                    <div class="col-auto">
                                                        <button class="btn bg-danger text-white" onclick="confirmRemove('<%= productData._id %>', '<%= i %>')">Remove</button>
                                                    </div>
                                                </div>
                                            <% } else { %>
                                                <div class="row align-items-center mb-3">
                                                    <div class="col-auto">
                                                        <img id="product_img_preview<%= i + 1 %>" src="#" alt="Image Preview" style="display: none; width: 100px; margin-top: 10px;">
                                                    </div>
                                                    <div class="col">
                                                        <input class="form-control" type="file" accept=".jpg, .jpeg, .png" id="product_img<%= i + 1 %>" name="product_img<%= i + 1 %>" onchange="return showCropperModal('<%= i + 1 %>')">
                                                    </div>
                                                </div>
                                            <% } %>
                                        </div>
                                    <% } %>
                                    <p id="image-error" class="text-danger"></p>
                                </div>
                                <div>
                                    <button type="submit" class="btn btn-md rounded font-sm hover-up" id="publishBtn" name="publishBtn" >Edit</button>
                                </div>
                            </form>
                        </div>
                    </div> <!-- card end// -->
                </div>
            </div>
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <!-- Cropper Modal -->
<div id="cropperModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Crop Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="image" src="#">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
            </div>
        </div>
    </div>
</div>
    <!-- !-- SweetAlert2 JS --> 
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="/admin/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/admin/assets/js/vendors/select2.min.js"></script>
    <script src="/admin/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/admin/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/admin/assets/js/main.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>

<script>
        let cropper;
        let currentInputId;
        
        function showCropperModal(inputId) {
            currentInputId = inputId;
            const fileInput = document.getElementById(`product_img${inputId}`);
            const file = fileInput.files[0];
            // Validate file type
            const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];
            if (!allowedTypes.includes(file.type)) {
                // alert('Invalid file type. Please select a JPEG or PNG image.');
                Swal.fire({
                icon: 'error',
                title: 'Invalid file type',
                text: 'Please select a JPEG or PNG image.'
            });
                fileInput.value = ''; // Clear the input
                return false;
            }

            const reader = new FileReader();
        
            reader.onload = function(e) {
                const image = document.getElementById('image');
                image.src = e.target.result;
                const modal = new bootstrap.Modal(document.getElementById('cropperModal'));
                modal.show();
        
                if (cropper) {
                    cropper.destroy();
                }
        
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1
                });
            };
        
            reader.readAsDataURL(file);
        }
        
        document.getElementById('cropButton').addEventListener('click', () => {
            const canvas = cropper.getCroppedCanvas({
                width: 600,
                height: 600,
            });
        
            canvas.toBlob((blob) => {
                const url = URL.createObjectURL(blob);
                const previewImage = document.getElementById(`product_img_preview${currentInputId}`);
                previewImage.src = url;
                previewImage.style.display = 'block';
        
                // Create a new File object to replace the original file input
                const croppedFile = new File([blob], 'cropped_image.jpg', {
                    type: 'image/jpeg',
                    lastModified: Date.now()
                });
        
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(croppedFile);
                document.getElementById(`product_img${currentInputId}`).files = dataTransfer.files;
        
                const modal = bootstrap.Modal.getInstance(document.getElementById('cropperModal'));
                modal.hide();
            });
        });
        // Get all input elements and preview images
        const fileInputs = document.querySelectorAll('.input-upload input[type="file"]');
        const previewImages = document.querySelectorAll('.input-upload img');
        
        // Add change event listener to each input
        fileInputs.forEach((input, index) => {
            input.addEventListener('change', (event) => {
                const file = event.target.files[0];
        
                // Check if the uploaded file is an image
                if (file && file.type.startsWith('image/')) {
                    const reader = new FileReader();
        
                    reader.onload = (e) => {
                        // Set the preview image src to the data URL
                        previewImages[index].src = e.target.result;
                        previewImages[index].style.display = 'block'; // Show the preview
                    };
        
                    reader.readAsDataURL(file);
                } else {
                    // Handle non-image files (e.g., display an error message)
                    console.error('Please upload an image file.');
                }
            });
        });



        const dis=`<%= productData.description %>`
        console.log(dis);
        document.getElementById('product_description').textContent=dis;

        async function confirmRemove(productId, imageUrl){
            console.log("produvt and  image url,",productId,imageUrl );
            const confirmed = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to remove this image?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });
        if(confirmed.isConfirmed) {
            await removeImage(productId, imageUrl);
        }
        }
        
        async function removeImage(productId, imageUrl) {
            console.log("product id --"+ productId);
            console.log("image url--"+ imageUrl)

            if(!productId || !imageUrl) {
                Swal.fire(
                    'Error!',
                    'Product ID or Image url is missing',
                    'error'
                );
                return;
            }

            const data = {
                productId: productId,
                image: imageUrl,
            }

            // const reqBody = JSON.stringify(data);
            try{
                const response = await fetch("/admin/products/edit/remove-image", {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                })
                
                if(response.ok){
                    Swal.fire(
                        'Deleted!',
                        'Your image has been removed.',
                        'success'
                    ).then(() => {
                        location.reload()
                    })

                } else {
                    Swal.fire(
                        'Error!',
                        'Failed to remove the image.',
                        'error'
                    )
                }
            } catch(err){
                Swal.fire(
                    'Error!',
                    'An error occured: '+ error.message,
                    'error'
                )
            }
        }

        function validateProductName(){
                const product_name = document.getElementById("product_name").value;
                const errorDiv = document.getElementById("name-error")
                console.log(product_name)
                if(product_name == "" || product_name == " "){
                    errorDiv.textContent = "Enter product name";
                    return false;
                } else {
                    errorDiv.textContent = "";
                    return true;
                }
            }

            function validateDescription(){
                const product_description = document.getElementById("product_description").value;
                const errorDiv = document.getElementById("description-error");
                console.log(product_description)
                if(product_description == "" || product_description == " "){
                    errorDiv.textContent = "Enter product description";
                    return false;
                } else {
                    errorDiv.textContent = "";
                    return true;
                }
            }

            function validatePrice(){
                const product_price = document.getElementById("product_price").value;
                const errorDiv = document.getElementById("price-error");
                console.log(product_price)
                if(product_price == 0 || product_price == undefined){
                    errorDiv.textContent = "Enter price of the price properly and cannot be 0";
                    return false;
                } else {
                    errorDiv.textContent = "";
                    return true;
                }
            }

            function validatePromoPrice(){
                const productPromo_price = Math.abs(document.getElementById("productPromo_price").value);
                const product_price = Math.abs(document.getElementById("product_price").value);
                console.log(productPromo_price)
                const errorDiv = document.getElementById("promoprice-error");
                if(productPromo_price == 0 || productPromo_price == undefined){
                    errorDiv.textContent = "Enter price of the price properly and cannot be 0";
                    return false;
                } else if(productPromo_price > product_price){
                    errorDiv.textContent = "Promotion price should be lesser than the Product price";
                    return false;
                } else {
                    errorDiv.textContent = "";
                    return true;
                }
            }

            function validateImage(index) {
                const input = document.getElementById(`product_img${index}`);
                console.log(input)
                const file = input.files[0];
                const validImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];
                const imageError = document.getElementById('image-error');

                if (file && validImageTypes.includes(file.type)) {
                    imageError.textContent = '';
                    return true
                } else {
                    imageError.textContent = 'Input 4 images';
                    input.value = ''; // Clear the invalid file
                    return false;
                }
            }


            function validateForm(){
                const productName = validateProductName();
                const description = validateDescription()
                const price = validatePrice()
                const promo_price = validatePromoPrice()
                const image = validateImage(1) && validateImage(2) && validateImage(3) && validateImage(4)

                if(productName && description && price && promo_price && image){
                    try {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'The product has been successfully updated.',
                            confirmButtonText: 'OK',
                        }).then((result) => {
                            if (result.isConfirmed) {
                            // Redirect to add-product page after confirmation
                            window.location.href = "/admin/products";
                            }
                        });
                        } catch (error) {
                        console.error('Error showing SweetAlert:', error);
                        // Handle errors gracefully, e.g., display an error message to the user
                        }
                    return true
                } else {
                    return false
                }
                

            }

    </script>

    <!-- <script>
        document.getElementById('publishBtn').addEventListener('click', async (event) => {
            event.preventDefault();
      
            const formData = new FormData();
      
            const productDetailsForm = document.getElementById('productDetailsForm');
            for (let [key, value] of new FormData(productDetailsForm).entries()) {
                formData.append(key, value);
            }

            const productStockForm = document.getElementById('productStockForm');
            for (let [key, value] of new FormData(productStockForm).entries()) {
                formData.append(key, value);
            }
      
            const productImg = document.getElementById('product_img').files[0];
            if (productImg) {
                formData.append('product_img', productImg);
            }

            formData.append('product_category', document.getElementById('product_category').value);
        
            console.log('fetching');
            // let jsonData = await JSON.stringify(formData)
            // console.log(typeof jsonData)
            await fetch('/admin/add-product', {
                method: 'POST',
                
                body: formData,
            })
            .then(response => {
                console.log("Response "+ response)
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                } else {
                // console.log('Response not OK')
                
            return response.json();

            }
            
            })
            .then(data => {
              console.log(data);
              // SweetAlert success message
              Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'The category has been successfully updated!',
                });
              alert('Product added successfully!!');
            })
            .catch(err => {
              console.log(err);
              alert('Some error occured');
            });
        });
      </script> -->
      
</body>

</html>