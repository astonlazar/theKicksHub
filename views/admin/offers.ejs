<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>theKicksHub - Admin</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="/admin/assets/imgs/theme/favicon.svg"
    />
    <!-- Template CSS -->
    <link href="/admin/assets/css/main.css" rel="stylesheet" type="text/css" />
    <!-- Include SweetAlert CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />

    <style>
        /* Custom width for the modal */
.modal-lg {
  max-width: 80%;
}

      li {
        list-style-type: none;
      }
      table {
  font-family: Arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #ddd;
  padding: 8px;
}

th {
  text-align: left;
  background-color: #f2f2f2;
}

    </style>
  </head>

  <body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
      <div class="aside-top">
          <a href="index.html" class="brand-wrap">
              <img src="/admin/assets/imgs/theme/logo.svg" class="logo" alt="Evara Dashboard">
          </a>
          <div>
              <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
          </div>
      </div>
      <nav>
          <ul class="menu-aside">
              <li class="menu-item">
                  <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                      <span class="text">Dashboard</span>
                  </a>
              </li>
              <li class="menu-item">
                  <a class="menu-link" href="/admin/user-management"> <i class="icon material-icons md-public"></i>
                      <span class="text">Users</span>
                  </a>
              </li>
              <li class="menu-item">
                  <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                      <span class="text">Products</span>
                  </a>
              </li>
              <li class="menu-item">
                  <a class="menu-link" href="/admin/categories"> <i class="icon material-icons md-store"></i>
                      <span class="text">Categories</span>
                  </a>
              </li>
              <li class="menu-item active">
                <a class="menu-link" href="/admin/offers"> <i class="icon material-icons md-shopping_cart"></i>
                    <span class="text">Offers</span>
                </a>
            </li>
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                      <span class="text">Orders</span>
                  </a>
              </li>
              <li class="menu-item ">
                <a class="menu-link" href="/admin/coupons"> <i class="icon material-icons md-receipt"></i>
                    <span class="text">Coupons</span>
                </a>
            </li>
        </ul>
      </nav>
  </aside>

<main class="main-wrap">

    <div "></div>


    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Offer</h2>
                <p>Add, edit or delete a offer</p>
            </div>
            <div>
                <a  class="btn btn-primary btn-sm rounded" href="/admin/offers/product/add" >Product</a>
                <a  class="btn btn-primary btn-sm rounded" href="/admin/offers/category/add" >Category</a>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="table-responsive">
                          <% if(offerData.length <= 0){ %>
                            <h4>No offers added..</h4>
                          <% } else { %>
                            <table class="table table-hover">
                                <thead>
                                <tr>
                                    <th>Status</th>
                                    <th>Offer</th>
                                    <th>Description</th>
                                    <th>Type</th>
                                    <th>Offer Percentage</th>
                                    <th>Add/Remove</th>
                                    <th>Update</th>
                                    <th>Action</th>
                                </tr>
                                </thead>
                                <tbody>
                                    <% offerData.forEach(data => { %>
                                  <tr>
                                    <td>
                                        <% if(data.isActive === true) { %>
                                            <span  class="badge badge-pill badge-soft-success" >Active</span>
                                        <% } else if(data.isActive === false) { %>
                                            <span  class="badge badge-pill badge-soft-danger" >Inactive</span>
                                        <% } %>
                                    </td>
                                    <td><%= data.offerName %></td>
                                    <td><%= data.offerDescription %></td>
                                    <td><%= data.offerType %></td>
                                    <td><%= data.discount %>%</td>
                                    <td>
                                        <% if(data.offerType === "Product"){ %>
                                            <a class="btn btn-dark show-modal" onclick="getOfferIdFunction('<%= data._id %>')" data-offer-type="Product" >Products</a>
                                        <% } else if(data.offerType === "Category") { %>
                                            <a class="btn btn-dark show-modal" onclick="getOfferIdFunction('<%= data._id %>')" data-offer-type="Category" >Categories</a>
                                        <% } %>
                                        
                                    </td>
                                    <td>
                                        <% if(data.offerType === "Product"){ %>
                                            <a href="/admin/offers/product/edit/<%= data._id %>" class="btn btn-primary">Edit</a>
                                        <% } else if(data.offerType === "Category") { %>
                                            <a href="/admin/offers/category/edit/<%= data._id %>" class="btn btn-primary">Edit</a>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if(data.isActive === true) { %>
                                            <button onclick="statusUpdate('<%= data._id %>')" class="btn btn-danger">Block</button>
                                        <% } else if(data.isActive === false) { %>
                                            <button onclick="statusUpdate('<%= data._id %>')" class="btn btn-success text-light">Unblock</button>
                                        <% } %>
                                    </td>
                                </tr>
                                <% }) %>
                                </tbody>
                            </table>
                            <% } %>     
                        </div>
                    </div> <!-- .col// -->
                </div> <!-- .row // -->
            </div> <!-- card body .// -->
        </div> <!-- card .// -->  
        <!-- Add category-->
    </section> <!-- content-main end// -->
    
</main>
<!-- Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg"> <!-- Added modal-lg class for larger modal -->
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="productModalLabel">Add Products</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="productModalBody">
          <!-- Product content will be loaded dynamically here -->
          <div class="row">
            <% if (productData) { %>
              <% productData.forEach(product => { %>
                <div class="col-md-3"> <!-- Four-column layout -->
                  <div class="card mb-3">
                    <img src="/uploads/<%= product.productImage[0] %>" class="card-img-top" alt="<%= product.productName %>">
                    <div class="card-body">
                      <h5 class="card-title"><%= product.productName %></h5>
                      <div class="d-flex justify-content-between">
                        <% if(product.offer){ %>
                            <button class="btn btn-danger remove-offer-btn" data-product-id="<%= product._id %>">Remove Offer</button>
                            <% } else { %>
                            <button class="btn btn-primary add-offer-btn" data-product-id="<%= product._id %>">Add Offer</button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } %>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  
  
  
  
<!-- Category Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg"> <!-- Added modal-lg class for larger modal -->
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="categoryModalLabel">Add Categories</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="categoryModalBody">
          <!-- Category content will be loaded dynamically here -->
          <div class="row">
            <% if (categoryData) { %>
              <% categoryData.forEach(category => { %>
                <div class="col-md-3"> <!-- Four-column layout -->
                  <div class="card mb-3">
                    <div class="card-body">
                      <h5 class="card-title"><%= category.categoryName %></h5>
                      <div class="d-flex justify-content-between">
                        <% if(category.offer){ %>
                            <button class="btn btn-danger remove-offer-btn" data-category-id="<%= category._id %>">Remove Offer</button>
                            <% } else { %>
                            <button class="btn btn-primary add-offer-btn" data-category-id="<%= category._id %>">Add Offer</button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } %>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  
  
  
  
<!-- Include SweetAlert JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
<script>

document.addEventListener('DOMContentLoaded', function() {
    // Event delegation for dynamically created buttons
    document.body.addEventListener('click', function(event) {
        if (event.target.matches('.btn-primary.btn-sm')) {
            applyOffer(event.target.id.split('_')[1]);
        } else if (event.target.matches('.btn-danger.btn-sm')) {
            removeOffer(event.target.id.split('_')[1]);
        }
    });

    function applyOffer(offerId) {
        const statusDiv = document.querySelector(`.badge`);
        const applybtn = document.getElementById(`applybtn_${offerId}`);
        const removebtn = document.getElementById(`removebtn_${offerId}`);

        const offertype = document.getElementById(`applytype_${offerId}`).value;
        let data;

        if (offertype === "Product Offer") {
            const productId = document.getElementById(`applypro_${offerId}`).value;
            data = {
                offerId: offerId,
                productId: productId,
                offertype: offertype
            };
        } else {
            const discount = document.getElementById(`applydis_${offerId}`).value;
            const categoryId = document.getElementById(`applycat_${offerId}`).value;
            data = {
                offerId: offerId,
                categoryId: categoryId,
                offertype: offertype,
                discount: discount
            };
        }

        fetch('/admin/offer/apply', {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
              // statusDiv.className = 'badge badge-pill badge-soft-success';
              //   statusDiv.textContent = 'Active';

              const statusDiv = document.querySelector(`.badge`);
            statusDiv.className = 'badge badge-pill badge-soft-success';
            statusDiv.textContent = 'Blocked';

                // if (applybtn) applybtn.style.display = 'none';
                // if (removebtn) removebtn.style.display = 'inline-block';
                

                Swal.fire({
                    icon: "success",
                    title: "Success!",
                    text: "Offer applied successfully",
                    confirmButtonText: "OK",
                }).then(() => {
                    window.location.href = "/admin/offer";
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "Failed to apply the offer. Please try again.",
                    confirmButtonText: "OK",
                });
            }
        })
        .catch(error => {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: "An unexpected error occurred. Please try again.",
                confirmButtonText: "OK",
            });
        });
    }

    function removeOffer(offerId) {
    const offertype = document.getElementById(`removetype_${offerId}`).value;
    let data;

    if (offertype === "Product Offer") {
        const productId = document.getElementById(`removepro_${offerId}`).value;
        data = {
            offerId: offerId,
            productId: productId,
            offertype: offertype
        };
    } else {
        const discount = document.getElementById(`removedis_${offerId}`).value;
        const categoryId = document.getElementById(`removecat_${offerId}`).value;
        data = {
            offerId: offerId,
            categoryId: categoryId,
            offertype: offertype,
            discount: discount
        };
    }

    console.log("Sending data: ", data);  // Add this line to log data

    fetch('/admin/offer/remove', {
        method: 'POST',
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const statusDiv = document.querySelector(`.badge`);
            statusDiv.className = 'badge badge-pill badge-soft-danger';
            statusDiv.textContent = 'Blocked';

            Swal.fire({
                icon: "success",
                title: "Success!",
                text: "Offer removed successfully",
                confirmButtonText: "OK",
            }).then(() => {
                window.location.href = "/admin/offer";
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: "Failed to remove the offer. Please try again.",
                confirmButtonText: "OK",
            });
        }
    })
    .catch(error => {
        console.error("Error:", error);
        Swal.fire({
            icon: "error",
            title: "Error!",
            text: "An unexpected error occurred. Please try again.",
            confirmButtonText: "OK",
        });
    });
}

});

</script>
<script src="/admin/assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/admin/assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/admin/assets/js/vendors/select2.min.js"></script>
<script src="/admin/assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/admin/assets/js/vendors/jquery.fullscreen.min.js"></script>
<!-- Main Script -->
<script src="/admin/assets/js/main.js" type="text/javascript"></script>

<script>
    function statusUpdate(offerId) {
        console.log('Offer Id - ', offerId)

        fetch("/admin/offers/status", {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({offerId: offerId})
        })
        .then(response => {
            if(response.ok){
                location.reload()
            }
        })
        .catch(error => {
            console.log(`Error in status update`, error)
        })
    }
</script>

//Script for modal of products and categories
<script>
    let offerId;
    function getOfferIdFunction(id){
        console.log('offerId - ', id)
        offerId = id;
    }
    document.addEventListener('DOMContentLoaded', function () {
        // Function to load products
        function loadProductModalContent() {
            let productModalBody = document.getElementById('productModalBody');
            // productModalBody.innerHTML = ''; // Clear previous content
            
            // Fetch and display products
            // Here you can use AJAX to fetch product data from the server
            // fetch('/path/to/products')
            //     .then(response => response.json())
            //     .then(data => {
            //         data.products.forEach(product => {
            //             let productItem = document.createElement('div');
            //             productItem.classList.add('product-item');
            //             productItem.innerHTML = `
            //                 <div>${product.name}</div>
            //                 <button class="btn btn-primary add-offer-btn" data-product-id="${product.id}">Add Offer</button>
            //             `;
            //             productModalBody.appendChild(productItem);
            //         });
            //     });
        }
    
        // Function to load categories
        function loadCategoryModalContent() {
            let categoryModalBody = document.getElementById('categoryModalBody');
            // categoryModalBody.innerHTML = ''; // Clear previous content
            
            // Fetch and display categories
            // Here you can use AJAX to fetch category data from the server
            // fetch('/path/to/categories')
            //     .then(response => response.json())
            //     .then(data => {
            //         data.categories.forEach(category => {
            //             let categoryItem = document.createElement('div');
            //             categoryItem.classList.add('category-item');
            //             categoryItem.innerHTML = `
            //                 <div>${category.name}</div>
            //                 <button class="btn btn-primary add-offer-btn" data-category-id="${category.id}">Add Offer</button>
            //             `;
            //             categoryModalBody.appendChild(categoryItem);
            //         });
            //     });
        }
    
        // Event listener for showing the modals
        document.querySelectorAll('.show-modal').forEach(button => {
            button.addEventListener('click', function () {
                let offerType = this.getAttribute('data-offer-type');
                if (offerType === 'Product') {
                    loadProductModalContent();
                    let productModal = new bootstrap.Modal(document.getElementById('productModal'));
                    productModal.show();
                } else if (offerType === 'Category') {
                    loadCategoryModalContent();
                    let categoryModal = new bootstrap.Modal(document.getElementById('categoryModal'));
                    categoryModal.show();
                }
            });
        });
    
        // Event listener for add offer buttons in product modal
        document.getElementById('productModalBody').addEventListener('click', function (event) {
            if (event.target.classList.contains('add-offer-btn')) {
                let productId = event.target.getAttribute('data-product-id');
                // Handle adding offer to the product
                console.log('Add offer to product:', productId);
                fetch("/admin/offer/apply-product", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({productId: productId, offerId: offerId})
                }).then(response => {
                    if(response.ok){
                        location.reload()
                    }
                })
            } else if (event.target.classList.contains('remove-offer-btn')) {
                let productId = event.target.getAttribute('data-product-id');
                // Handle removing offer from the product
                console.log('Remove offer from product:', productId);
                fetch("/admin/offer/delete-product", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({productId: productId, offerId: offerId})
                }).then(response => {
                    if(response.ok){
                        location.reload()
                    }
                })
            }
        });
    
        // Event listener for add offer buttons in category modal
        document.getElementById('categoryModalBody').addEventListener('click', function (event) {
            if (event.target.classList.contains('add-offer-btn')) {
                let categoryId = event.target.getAttribute('data-category-id');
                // Handle adding offer to the category
                console.log('Add offer to category:', categoryId);
                fetch("/admin/offer/apply-category", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({categoryId: categoryId, offerId: offerId})
                }).then(response => {
                    if(response.ok){
                        location.reload()
                    }
                })
            } else if (event.target.classList.contains('remove-offer-btn')) {
                let categoryId = event.target.getAttribute('data-category-id');
                // Handle removing offer from the category
                console.log('Remove offer from category:', categoryId);
                fetch("/admin/offer/delete-category", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({categoryId: categoryId, offerId: offerId})
                }).then(response => {
                    if(response.ok){
                        location.reload()
                    }
                })
            }
        });
    });
    </script>
    
</body>

</html>